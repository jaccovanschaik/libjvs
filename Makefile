# Makefile for libjvs.
#
# Copyright:    (c) 2007 Jacco van Schaik (jacco@jaccovanschaik.net)
# Version:      $Id$
#
# This software is distributed under the terms of the MIT license. See
# http://www.opensource.org/licenses/mit-license.php for details.

.PHONY: test

MAKE_ALIB = ar rv
MAKE_SLIB = gcc -shared -o

INSTALL_LIB = $(HOME)/lib
INSTALL_INC = $(HOME)/include/libjvs

CC = gcc

LIBJVS = vector.o buffer.o hash.o list.o hashlist.o mdf.o debug.o dis.o \
	 utils.o bitmask.o net.o tcp.o udp.o log.o ns.o pa.o ml.o options.o \
	 geo2d.o vector2.o matrix2.o vector3.o matrix3.o geometry2.o tree.o

OPT = -O0
CFLAGS = -std=gnu99 -g -fPIC -Wall -pedantic $(OPT) # -DPARANOID

all: libjvs.a libjvs.so # tags

libjvs.a: $(LIBJVS)
	$(MAKE_ALIB) libjvs.a $(LIBJVS)

libjvs.so: $(LIBJVS)
	$(MAKE_SLIB) libjvs.so $(LIBJVS) -lm

clean:
	rm -f *.o libjvs.a libjvs.so core vgcore.* libjvs.tgz *.test *.log tags

libjvs.tgz: clean
	tar cvf - `ls | grep -v libjvs.tgz` | gzip > libjvs.tgz

install: libjvs.a libjvs.so test
	if [ ! -d $(INSTALL_LIB) ]; then mkdir -p $(INSTALL_LIB); fi
	cp libjvs.a libjvs.so $(INSTALL_LIB)
	if [ ! -d $(INSTALL_INC)/libjvs ]; then mkdir -p $(INSTALL_INC); fi
	rm -rf $(INSTALL_INC)/*
	cp *.h $(INSTALL_INC)

tags: $(wildcard *.[ch])
	ctags -R . /usr/include

%.test: %.c %.h
	@$(CC) $(CFLAGS) -DTEST -o $@ $< libjvs.a -lm

test: do_tests.sh libjvs.a
	./do_tests.sh

commit:
	@echo "\033[7mSubversion status:\033[0m"
	@svn status
	@echo "\033[7mGit status:\033[0m"
	@git status
	@echo -n 'Message: '
	@read msg && svn commit -m "$$msg" && git commit -a -m "$$msg" && git push

# Dependencies - generated by deps on Thu 17 Oct 2019 09:59:02 PM CEST
bitmask.o: bitmask.c buffer.h bitmask.h utils.h defs.h 
buffer.o: buffer.c buffer.h utils.h defs.h debug.h 
debug.o: debug.c debug.h utils.h 
dis.o: dis.c list.h debug.h utils.h dis.h dis-types.h 
geo2d.o: geo2d.c geo2d.h utils.h 
geometry2.o: geometry2.c vector2.h matrix2.h geometry2.h 
hash.o: hash.c list.h debug.h utils.h pa.h hash.h 
hashlist.o: hashlist.c list.h hash.h hashlist.h 
list.o: list.c list.h 
log.o: log.c log.h net.h tcp.h udp.h list.h buffer.h defs.h utils.h 
matrix2.o: matrix2.c matrix2.h utils.h 
matrix3.o: matrix3.c matrix2.h matrix3.h 
mdf.o: mdf.c buffer.h mdf.h utils.h 
ml.o: ml.c debug.h defs.h ml.h 
net.o: net.c defs.h net.h debug.h 
ns.o: ns.c net.h tcp.h dis.h utils.h debug.h ns.h ns-types.h utils.h 
options.o: options.c pa.h hashlist.h hash.h buffer.h utils.h options.h 
pa.o: pa.c defs.h debug.h pa.h utils.h 
tcp.o: tcp.c net.h tcp.h defs.h debug.h net.h 
udp.o: udp.c net.h tcp.h debug.h utils.h net.h 
utils.o: utils.c defs.h utils.h buffer.h 
vector.o: vector.c defs.h vector.h 
vector2.o: vector2.c vector2.h utils.h 
vector3.o: vector3.c vector3.h utils.h 
